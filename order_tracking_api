<?php
require_once "db_conn.php";

header('Content-Type: application/json');
// header('Access-Control-Allow-Origin: *'); // Uncomment only if using cross-origin frontend

session_start(); // Only needed if you want to check user's session

// --- AUTHORIZATION (optional, but recommended) ---
// if (!isset($_SESSION['user_id'])) {
//     http_response_code(403);
//     echo json_encode(["status" => "error", "message" => "Unauthorized"]);
//     exit;
// }

if (!isset($_GET['order_id'])) {
    http_response_code(400);
    error_log("Order tracking error: Missing order_id. Params: " . json_encode($_GET));
    echo json_encode(["status" => "error", "message" => "Order ID is required"]);
    exit;
}

$order_id = $_GET['order_id'];
if (!is_numeric($order_id) || intval($order_id) <= 0) {
    http_response_code(400);
    error_log("Order tracking error: Invalid order_id. Params: " . json_encode($_GET));
    echo json_encode(["status" => "error", "message" => "Invalid Order ID"]);
    exit;
}
$order_id = intval($order_id);

// --- Fetch Order Details ---
$orderQuery = $pdo->prepare("SELECT order_id, estimated_delivery, user_id FROM orders WHERE order_id = ?");
$orderQuery->execute([$order_id]);
$order = $orderQuery->fetch(PDO::FETCH_ASSOC);

if (!$order) {
    http_response_code(404);
    error_log("Order tracking error: Order not found. Order ID: $order_id");
    echo json_encode(["status" => "error", "message" => "Order not found"]);
    exit;
}

// --- AUTHORIZATION: Only allow order owner (uncomment if needed) ---
// if ($_SESSION['user_id'] != $order['user_id']) {
//     http_response_code(403);
//     error_log("Order tracking error: Unauthorized access. User ID: ".$_SESSION['user_id'].", Order: ".json_encode($order));
//     echo json_encode(["status" => "error", "message" => "Unauthorized access to order."]);
//     exit;
// }

// --- Fetch Tracking History ---
$trackingQuery = $pdo->prepare(
    "SELECT status, location, updated_at 
     FROM order_tracking 
     WHERE order_id = ? 
     ORDER BY updated_at ASC 
     LIMIT 50"
);
$trackingQuery->execute([$order_id]);
$trackingData = $trackingQuery->fetchAll(PDO::FETCH_ASSOC);

// --- Success Response ---
$response = [
    "status" => "success",
    "order_id" => $order['order_id'],
    "estimated_delivery" => $order['estimated_delivery'],
    "tracking" => $trackingData
];

echo json_encode($response);
